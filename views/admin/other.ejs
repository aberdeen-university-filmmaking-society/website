<%- include header.ejs %>
<style>
table {
  border-collapse: collapse;
  font-family: Consolas, 'Courier New', Courier, monospace;
  width:100%;
}

table, th, td {
  border: 1px solid black;
}
.table-cmds{
    width:64px;
}
.tageditor{
    display: flex;
}
.tageditor-listcontainer{
    width:300px;
    height:256px;
}
.tageditor-listcontainer{
    padding:0;
}
.tageditor-editor{
    width:100%;
    height:100%;
    background-color:blue;
}
#terminal{
    position: fixed;
    width:100%;
    height:100%;
    top:0;
    left:0;
    background-color:black;
    color:white;
    font-family: 'Consolas', 'Lucida Console', 'Monaco', monospace;
    padding:12px;
    z-index:10;
}
.faq-template{
    margin-bottom:6px;
}
.faq-template > div>input:nth-child(2){
    font-weight: normal;
    border-radius: 0;
}
.faq-template > div>input:nth-child(3){
    font-weight: normal;
    border-radius: 0 0 4px 4px;
}

.committeelist-empty{
    display: none;
    font-size: 11px;
    opacity:0.6;
    margin:6px;
    margin-bottom:6px;
}
#committeelist:empty + .committeelist-empty{
    display:block;
}


</style>
<div class="section">
    <div class="sectionheader">Committees</div>
    <div style="margin-bottom:12px;">
        <button style="display:inline-block" class="smallbtn" onclick="addCommittee()">ADD COMMITEE</button>
        <button id="deletecommittee" style="display:inline-block;" class="smallbtn" onclick="deleteCommittee()">DELETE</button>
    </div>
    <select id="committeeselector" onchange="committeeSelectionChange()">
        <option value="none">No Selection</option>
    </select>
    <div id="committeeeditor" style="display:none;">
    <label style="font-size:12px;">Name:</label>
    <input type="text" id="committeename" placeholder="e.g. '2020-2021 Committee'" class="smaller" onkeyup="syncCommitteeValues()" value="">
    <label style="font-size:12px;">Subtitle:</label>
    <input type="text" id="committeesubtitle" placeholder="For a committee's nickname, for example" class="smaller" onkeyup="syncCommitteeValues()" value="">
    <label style="font-size:12px;">Members:</label>
    <div id="committeelist"></div><div class="committeelist-empty">No members in the currently selected committee</div>
    <button class="smallbtn" onclick="addCommitteeMember()">ADD COMMITEE MEMBER</button>
    </div>
    <br><br>
    <label style="font-size:12px;">The names of the committees are ordered alphabetically on save, but the order of the members within each committee can be changed by dragging them around.</label>
    <button class="bigbtn" onclick="savecommittee()">Save</button>
    <script>
        let committeeArray = JSON.parse(`<%- JSON.stringify(committee) %>`);
        console.log("Committee array=");
        console.log(committeeArray);

        function addCommittee(){
            let newId = Date.now();
            committeeArray.push({
                id:newId,
                name:"",
                members:[]
            });
            loadCommitteList();
            $("#committeeselector").val(newId).change();
        }
        function deleteCommittee(){
            let id = $("#committeeselector").val();
            if(id == "none"){
                return;
            }
            if(confirm(`Are you sure you want to delete the currently selected committee?`)){
                for (let i = 0; i < committeeArray.length; i++) {
                    if(committeeArray[i].id == id){
                        committeeArray.splice(i,1);
                        loadCommitteList();
                        $("#committeeselector").val("none").change();
                        break;
                    }
                }
            }
        }
        function committeeSelectionChange(){
            let selected = $("#committeeselector").val();
            loadCommitteeValues(selected);
            if(selected != "none"){
                $("#committeeeditor").show();
                $("#deletecommittee").show();
            }
            else{
                $("#committeeeditor").hide();
                $("#deletecommittee").hide();
            }
        }
        function loadCommitteList(){
            $("#committeeselector").empty();
            $("#committeeselector").append($(document.createElement('option')).text("No selection").val('none'));
            for (let i = 0; i < committeeArray.length; i++) {
                $("#committeeselector").append($(document.createElement('option')).text(committeeArray[i].name).val(committeeArray[i].id));
            }
        }
        
        function savecommittee(){

            committeeArray.sort((a,b)=>(-a.name.localeCompare(b.name)));
            $.ajax({
                type: "POST",
                dataType: 'text',
                data: JSON.stringify(committeeArray),
                contentType: 'application/json',
                url: '/admin/committee/save',
                success: function (res) {
                    alert("Successfully updated committee list!");
                    window.location.reload();
                },
                error: function(res){
                    alert("Failed to sync committee list!");
                }
            });
            
        }

        function loadCommitteeValues(id){
            $("#committeename").val('');
            $("#committeesubtitle").val('');
            $("#committeelist").empty();
            for (let i = 0; i < committeeArray.length; i++) {
                if(committeeArray[i].id == id){
                    $("#committeename").val(committeeArray[i].name);
                    $("#committeesubtitle").val(committeeArray[i].subtitle);
                    for (let j = 0; j < committeeArray[i].members.length; j++) {
                        addCommitteeMember(committeeArray[i].members[j].name, committeeArray[i].members[j].position, committeeArray[i].members[j].image);
                    }
                }
            }
        }

        function syncCommitteeValues(){
            let selectedId = $("#committeeselector").val();
            if(selectedId != "none"){
                for (let i = 0; i < committeeArray.length; i++) {
                    if(committeeArray[i].id == selectedId){
                        committeeArray[i].name = $("#committeename").val();
                        committeeArray[i].subtitle = $("#committeesubtitle").val();
                        $(`#committeeselector > option[value=${selectedId}]`).text(committeeArray[i].name);
                        newMembersArray = [];
                        $("#committeelist > .faq-template").each(function(){
                            newMembersArray.push({
                                name: $(this).find('.member-name').val(),
                                position: $(this).find('.member-position').val(),
                                image: $(this).find('.member-image').val(),
                            });
                        });
                        committeeArray[i].members = newMembersArray;
                    }
                }
            }
        }

        function prepareCommitteeList(){
            $('#committeelist').sortable({
                stop:function(){
                    syncCommitteeValues()
                },
                animation:150,
                axis:'y'
            });
            $('.autogrow').autogrow({vertical: true, horizontal: false});
        }
        function buildCommitteeMember(name, position, image){
            return `<div class="faq-template">
                <div style="margin-right:36px;">
                    <input class="member-name" type="text" placeholder="Name" value="${name}" onkeyup="syncCommitteeValues()" autocomplete="new-password">
                    <input class="member-position notbold" type="text" placeholder="Position" value="${position}" onkeyup="syncCommitteeValues()" autocomplete="new-password">
                    <input class="member-image notbold" type="text" placeholder="Image URL" value="${image}" onkeyup="syncCommitteeValues()" autocomplete="new-password">
                </div>
                <button class="smallbtn" style="position:absolute;font-weight: normal;" onclick="deleteCommitteeMember(this)"><i class="far fa-trash-alt"></i></button>
                <i class="move fas fa-arrows-alt"></i>
            </div>`
        }
        function addCommitteeMember(name='',position='',image=''){
            $("#committeelist").append(buildCommitteeMember(name,position,image));
            prepareCommitteeList();
        }
        function deleteCommitteeMember(btn){
            $(btn).parent().remove();
            syncCommitteeValues();
        }

        loadCommitteList();
        
    </script>
</div>
<div class="section">
    <script src="/javascripts/eventsource.min.js"></script>
    <div class="sectionheader">Update</div>
    <p>This will trigger a git pull, if necessary an npm install, and restart the website: please ensure no important operations are underway</p>
    <p>If for some reason this crashes the website, you will need to login to the CPanel in order to restore it.</p>
    <b>Current version:</b>&nbsp;<span><%=websiteversion %></span><br>
    <b>Latest version:</b>&nbsp;<span id="update-latestversion">...</span>
    <button class="smallbtn" style="float:right;margin-bottom:12px;" onclick="restartwebsite()">RESTART WEBSITE</button>
    <button class="bigbtn" onclick="updatewebsite()">UPDATE WEBSITE</button>
    <%
    function format(seconds){
        function pad(s){
          return (s < 10 ? '0' : '') + s;
        }
        var hours = Math.floor(seconds / (60*60));
        var minutes = Math.floor(seconds % (60*60) / 60);
        var seconds = Math.floor(seconds % 60);
      
        return pad(hours) + ':' + pad(minutes) + ':' + pad(seconds);
      }
    %>
    <p style="font-size:10px;opacity:0.5px;margin-top:4px;margin-bottom:0;text-align:right;">Time since previous restart: <%= format(process.uptime()) %></p>
</div>
<div class="section">
        <div class="sectionheader">Topics</div>
        <p>Any tag can be given a full name and an optional description, transforming it into a "topic". Topics exist even if no post or film is tagged with one, and are given more importance when calculating related films/posts</p>
        <input id='tags' type="text" placeholder='Search tags...' onkeyup="searchedTag()" style="width:calc(100% - 152px);display:inline-block;">
        <script>
            var availabletags = [];
            <% if(tags) { %>
                availabletags = JSON.parse(`<%- tags %>`)
            <% } %>
            $( "#tags" ).autocomplete({
               source: availabletags,
               autofocus:true,
               minLength:1,
               delay:0
            });
            function searchedTag(){
                var searchtext=$("#tags").val();
                if(availabletags.indexOf(searchtext)==-1){
                    $("#tageditor-button").text("CREATE TOPIC");
                }
                else{
                    $("#tageditor-button").text("EDIT TOPIC");
                }
            }
        </script>
        <button id="tageditor-button" class="smallbtn" onclick="getTopic()" style="display: inline-block;height:42px;width:148px;margin-top:0;margin-bottom:6px;">CREATE TOPIC</button>
        <div id="tageditor-container" class="hidden">
            <input id='tageditor-title' type="text" placeholder='Title' style="font-weight: bold;">
            <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/9.12.0/highlight.min.js"></script>
            <script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
            <div id="tageditor-description" style="min-height: 128px"></div>
            <button class="bigbtn" onclick="cancelTopic()">CANCEL</button>
            <button class="bigbtn" onclick="saveTopic()">SAVE</button>
        </div>
    </div>
<div class="section">
        <div class="sectionheader">SQL Database</div>
        <b style="color:red;">ONLY TOUCH IF YOU KNOW WHAT YOU'RE DOING: YOU COULD PERMANENTLY REMOVE ENTRIES FROM THE DATABASE</b>
        <input id="sqlquery" type="text" style="margin-top:4px;font-family: Consolas, 'Courier New', Courier, monospace" placeholder="Query">
        <button class="smallbtn" onclick="sendsql()">SEND</button>
    </div>

        <div class="section">
<div class="sectionheader">AUFS Productions</div>
<p>AUFS Productions was deprecated in 2020, however you can still access the user-facing website <a target="_blank" href="/productions">here</a> and the admin panel <a href="/admin/productions" target="_blank">here</a>.</p>
        </div>
        <div id="terminal" style="display:none;">
        </div>
    <script>
        $.getJSON("https://raw.githubusercontent.com/aberdeen-university-filmmaking-society/website/master/package.json", function( data ) {
            if(data && data.version){
                $("#update-latestversion").text(data.version);
            }
            else{
                $("#update-latestversion").text("?");
            }
        });
    function getTopic(){
        $.get("/admin/tags/"+$("#tags").val(), function(result){
            $("#tageditor-container").removeClass("hidden");
            $("#tageditor-title").val(result.fullname);
            quill.setContents(JSON.parse(result.description));
        });
    }
    function saveTopic(){
        $.ajax({
                type: "POST",
                dataType: 'text',
                data: JSON.stringify({fullname: $("#tageditor-title").val(),description:JSON.stringify(quill.getContents()),id:$("#tags").val()}),
                contentType: 'application/json',
                url: '/admin/tags',
                success: function (res) {
                    console.log(res);
                    alert(res);
                },
                error: function(res){
                    console.log(res);
                    alert(res);
                }
            });
    }
    function cancelTopic(){
        $("#tageditor-container").addClass("hidden");
    }

    var toolbarOptions = [
    [{ 'font': [] }, { 'size': [] }],
          [ 'bold', 'italic', 'underline', 'strike' ],
          [{ 'color': [] }, { 'background': [] }],
          [{ 'script': 'super' }, { 'script': 'sub' }],
          [{ 'header': '1' }, { 'header': '2' }, 'blockquote', 'code-block' ],
          [{ 'list': 'ordered' }, { 'list': 'bullet'}, { 'indent': '-1' }, { 'indent': '+1' }],
          [ 'direction', { 'align': [] }],
          [ 'link', 'image', 'video', 'formula' ],
          [ 'clean' ]
    ];
        var quill = new Quill('#tageditor-description', {
        modules: {
            syntax: true,
            toolbar: toolbarOptions
        },
        placeholder: 'Description',
        theme: 'snow'
    });

        function sendsql(){
            $.ajax({
                type: "POST",
                dataType: 'text',
                data: JSON.stringify({query:$("#sqlquery").val()}),
                contentType: 'application/json',
                url: '/admin/sql',
                success: function (res) {
                    console.log(res);
                    alert(res);
                },
                error: function(res){
                    console.log(res);
                    alert(res);
                }
            });
        }

        var entityMap = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;',
  '/': '&#x2F;',
  '`': '&#x60;',
  '=': '&#x3D;'
};

function escapeHtml (string) {
  return String(string).replace(/[&<>"'`=\/]/g, function (s) {
    return entityMap[s];
  });
}
function restartwebsite(){
    if(confirm("Please ensure no important operations or votes are underway, as they will most likely be lost. Continue?")){
        $.post("/admin/restart", function(){
            document.location.reload();
        });
    }
}
        function updatewebsite(){
            if(confirm("Please be aware that if you push a broken update, you may no longer have access to this panel, and will need to fix things from within the web hosting provider's system. Continue?"))
            {
            const evtSource = new EventSource('/admin/update');
            evtSource.addEventListener('message', event => {
                console.log(event);
                const updateinfo = JSON.parse(event.data);
                $("#terminal").show(0);
                if(updateinfo.text){
                    $("#terminal").append(escapeHtml(updateinfo.text)+"<br>");
                }
                if(updateinfo.alert){
                    alert(updateinfo.alert);
                }
            });
            evtSource.addEventListener('error', function(err){
                $("#terminal").hide(0);
                evtSource.close();
            });
            evtSource.addEventListener('end', function(err){
                $("#terminal").hide(0);
                evtSource.close();
                document.location.reload();
            });
            }
        }

    </script>